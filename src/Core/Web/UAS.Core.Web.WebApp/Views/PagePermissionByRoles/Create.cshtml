@model UAS.Core.DAL.Common.Model.PagePermissionByRole

@{
    ViewBag.Title = "Permisos Páginas";
}

<div id="wrapper">
    <div class="row wrapper border-bottom white-bg page-heading">
        <div class="col-sm-4">
            <h2 class="text-uppercase">@ViewBag.Title</h2>
            <ol class="breadcrumb">
                <li>
                    <a href="#">Administración</a>
                </li>
                <li class="active">
                    <strong>@ViewBag.Title</strong>
                </li>
            </ol>
        </div>
    </div>
    <div class="wrapper wrapper-content animated fadeInRight">
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>Crear Permisos Página</h5>
                    </div>
                    <div class="ibox-content">
    
    				@using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            @Html.ValidationSummary(true)
    
            <div class="form-group">
                <label class = "control-label col-md-2" >Página</label>
                <div class="col-md-10">
                    @Html.DropDownList("IdPage", null, String.Empty, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdPage)
                </div>
            </div>
    
            <div class="form-group">
                <label class = "control-label col-md-2" >Rol</label>
                <div class="col-md-10">
                    @Html.DropDownList("IdRole", null, String.Empty, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdRole)
                </div>
            </div>
    
            <div class="form-group">
                <label class = "control-label col-md-2" >¿Defecto?</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IsDefault)
                    @Html.ValidationMessageFor(model => model.IsDefault)
                </div>
            </div>
    
            <div class="form-group">
                <label class = "control-label col-md-2" >¿Visible?</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IsVisible)
                    @Html.ValidationMessageFor(model => model.IsVisible)
                </div>
            </div>
    
            <div class="form-group">
                <label class = "control-label col-md-2" >¿Editar?</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CanEdit)
                    @Html.ValidationMessageFor(model => model.CanEdit)
                </div>
            </div>
    
            <div class="form-group">
                <label class = "control-label col-md-2" >¿Actualizar?</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CanUpdate)
                    @Html.ValidationMessageFor(model => model.CanUpdate)
                </div>
            </div>
    
            <div class="form-group">
                <label class = "control-label col-md-2" >¿Listar?</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CanSelect)
                    @Html.ValidationMessageFor(model => model.CanSelect)
                </div>
            </div>
    
            <div class="form-group">
                <label class = "control-label col-md-2" >¿Eliminar?</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CanDelete)
                    @Html.ValidationMessageFor(model => model.CanDelete)
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Guardar" class="btn btn-primary" />
    				@Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-white"})
                </div>
            </div>
        </div>
    }
    
                    </div>
                </div>
            </div>
        </div>
     </div>
     </div>    
